
This script was made to help you launch our Snakemake workflows.

*** OPTIONS ***

POSSIBLE ACTIONS:
The launcher's default behavior is to run the workflow, but other actions can be called instead:

--help: to print the help
$ ./runGeCKO.sh --help

--create-gecko-env: to create a suitable environment for launching GeCKO workflows. This will create a conda environment 'GeCKO_env' providing compatible versions of Snakemake, Mamba and their dependencies. It will then be possible to activate it with conda activate GeCKO_env before launching any workflow.
$ ./runGeCKO.sh --create-gecko-env
This will create a conda environment 'GeCKO_env' providing compatible versions of Snakemake, Mamba and their dependencies. It will then be possible to activate it with conda activate GeCKO_env before launching any workflow.

--dryrun: to only dryrun the workflow (and detect potential errors) without actually running it
$ ./runGeCKO.sh --workflow WorkflowName --dryrun

--report: to write an html report of the workflow's last run
$ ./runGeCKO.sh --workflow WorkflowName --report


MANDATORY PARAMETERS FOR ALL ACTIONS except for --help and --create-gecko-env:
--workflow [...]: the name of the workflow you want to run. Current existing options are 'DataCleaning', 'ReadMapping', 'VariantCalling' and 'VcfFiltering'

CONFIGURATION PARAMETERS:
--cluster-profile [...]: path to the cluster profile folder. This folder must contain a yaml configuration file named 'config.yaml'. This file's first part provides information specific to your cluster (queues/partitions names, and needed cpus and memory for each task). The second part determines how jobs should be submitted depending on your cluster's job-scheduler. Please use the GeCKO's templates provided for SGE and SLURM job-shedulers in the example section of each workflow. If omitted, the workflow will run without submitting any job and any parallelization.
--config-file [...]: path to the workflow's config file. If omitted, this script will look for a config_WorkflowName.yml file (eg: config_DataCleaning.yml) in a CONFIG/ folder in the directory it was executed from.

USEFUL EXTRA OPTIONS:
--jobs [int]: the maximum number of jobs that can be run in parallel (default: 1)
--latency-wait [int]: the number of seconds Snakemake will wait after the end of a task to look for the expected output files (default: 20).
You should increase it if Snakemake returns an error such as:
    "MissingOutputException in ... of ...:
    Job Missing files after 20 seconds:
    ...
    This might be due to filesystem latency. If that is the case, consider to increase the wait time with --latency-wait."
--forceall: run all the workflow's steps, even if output files already exist (and overwrite them). Without this argument, Snakemake's default behavior is to only run the steps for which output files are missing.
--conda-env-path: the path to a folder of your choice where conda will build the workflow's environment. If specified, the environment will only be built once in this folder (the first time you run the workflow). Otherwise, a new environment will be built in every new folder the workflow is launched from.

ANY OTHER OPTIONS:
--extra-snakemake-options ["..."]: any list of other Snakemake options that you may want to pass to the Snakemake command. Be careful to provide them between quotes. For an exhaustive list of Snakemake options see https://snakemake.readthedocs.io/en/stable/index.html.


For more information or to report any issue, see our GitHub: https://github.com/GE2POP/GeCKO
